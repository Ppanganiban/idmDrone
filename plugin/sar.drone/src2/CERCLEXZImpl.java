/**
 * generated by Xtext 2.10.0
 */
package sar.drone.drn.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import sar.drone.drn.CERCLEXZ;
import sar.drone.drn.DrnPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>CERCLEXZ</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link sar.drone.drn.impl.CERCLEXZImpl#getRayonCST <em>Rayon CST</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CERCLEXZImpl extends DepXZ_IMPLImpl implements CERCLEXZ
{
  /**
   * The default value of the '{@link #getRayonCST() <em>Rayon CST</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRayonCST()
   * @generated
   * @ordered
   */
  protected static final int RAYON_CST_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getRayonCST() <em>Rayon CST</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRayonCST()
   * @generated
   * @ordered
   */
  protected int rayonCST = RAYON_CST_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CERCLEXZImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DrnPackage.Literals.CERCLEXZ;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getRayonCST()
  {
    return rayonCST;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRayonCST(int newRayonCST)
  {
    int oldRayonCST = rayonCST;
    rayonCST = newRayonCST;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DrnPackage.CERCLEXZ__RAYON_CST, oldRayonCST, rayonCST));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DrnPackage.CERCLEXZ__RAYON_CST:
        return getRayonCST();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DrnPackage.CERCLEXZ__RAYON_CST:
        setRayonCST((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DrnPackage.CERCLEXZ__RAYON_CST:
        setRayonCST(RAYON_CST_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DrnPackage.CERCLEXZ__RAYON_CST:
        return rayonCST != RAYON_CST_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer();
    result.append("<"+name+">");
    result.append("<rayon>"+rayonCST+"</rayon>");
    result.append("<time>"+tempsCST+"</time>");
    result.append("</"+name+">");
    return result.toString();
  }

} //CERCLEXZImpl
