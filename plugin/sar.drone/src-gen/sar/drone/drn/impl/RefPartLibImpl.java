/**
 * generated by Xtext 2.10.0
 */
package sar.drone.drn.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import sar.drone.drn.Assignement;
import sar.drone.drn.DrnPackage;
import sar.drone.drn.Library;
import sar.drone.drn.RefPartLib;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Ref Part Lib</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link sar.drone.drn.impl.RefPartLibImpl#getLibs <em>Libs</em>}</li>
 *   <li>{@link sar.drone.drn.impl.RefPartLibImpl#getAssignements <em>Assignements</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RefPartLibImpl extends MovementImpl implements RefPartLib
{
  /**
   * The cached value of the '{@link #getLibs() <em>Libs</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLibs()
   * @generated
   * @ordered
   */
  protected Library libs;

  /**
   * The cached value of the '{@link #getAssignements() <em>Assignements</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAssignements()
   * @generated
   * @ordered
   */
  protected Assignement assignements;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RefPartLibImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DrnPackage.Literals.REF_PART_LIB;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Library getLibs()
  {
    if (libs != null && libs.eIsProxy())
    {
      InternalEObject oldLibs = (InternalEObject)libs;
      libs = (Library)eResolveProxy(oldLibs);
      if (libs != oldLibs)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, DrnPackage.REF_PART_LIB__LIBS, oldLibs, libs));
      }
    }
    return libs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Library basicGetLibs()
  {
    return libs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLibs(Library newLibs)
  {
    Library oldLibs = libs;
    libs = newLibs;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DrnPackage.REF_PART_LIB__LIBS, oldLibs, libs));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Assignement getAssignements()
  {
    if (assignements != null && assignements.eIsProxy())
    {
      InternalEObject oldAssignements = (InternalEObject)assignements;
      assignements = (Assignement)eResolveProxy(oldAssignements);
      if (assignements != oldAssignements)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, DrnPackage.REF_PART_LIB__ASSIGNEMENTS, oldAssignements, assignements));
      }
    }
    return assignements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Assignement basicGetAssignements()
  {
    return assignements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAssignements(Assignement newAssignements)
  {
    Assignement oldAssignements = assignements;
    assignements = newAssignements;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DrnPackage.REF_PART_LIB__ASSIGNEMENTS, oldAssignements, assignements));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DrnPackage.REF_PART_LIB__LIBS:
        if (resolve) return getLibs();
        return basicGetLibs();
      case DrnPackage.REF_PART_LIB__ASSIGNEMENTS:
        if (resolve) return getAssignements();
        return basicGetAssignements();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DrnPackage.REF_PART_LIB__LIBS:
        setLibs((Library)newValue);
        return;
      case DrnPackage.REF_PART_LIB__ASSIGNEMENTS:
        setAssignements((Assignement)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DrnPackage.REF_PART_LIB__LIBS:
        setLibs((Library)null);
        return;
      case DrnPackage.REF_PART_LIB__ASSIGNEMENTS:
        setAssignements((Assignement)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DrnPackage.REF_PART_LIB__LIBS:
        return libs != null;
      case DrnPackage.REF_PART_LIB__ASSIGNEMENTS:
        return assignements != null;
    }
    return super.eIsSet(featureID);
  }

} //RefPartLibImpl
