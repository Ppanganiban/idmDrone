/**
 * generated by Xtext 2.10.0
 */
package sar.drone.drn;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Type Primitif</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see sar.drone.drn.DrnPackage#getTypePrimitif()
 * @model
 * @generated
 */
public enum TypePrimitif implements Enumerator
{
  /**
   * The '<em><b>Bool Type</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #BOOL_TYPE_VALUE
   * @generated
   * @ordered
   */
  BOOL_TYPE(0, "boolType", "BOOLEAN"),

  /**
   * The '<em><b>Int Type</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #INT_TYPE_VALUE
   * @generated
   * @ordered
   */
  INT_TYPE(1, "intType", "NUMBER"),

  /**
   * The '<em><b>Real Type</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #REAL_TYPE_VALUE
   * @generated
   * @ordered
   */
  REAL_TYPE(2, "realType", "REAL"),

  /**
   * The '<em><b>String Type</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #STRING_TYPE_VALUE
   * @generated
   * @ordered
   */
  STRING_TYPE(3, "stringType", "TEXT");

  /**
   * The '<em><b>Bool Type</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Bool Type</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #BOOL_TYPE
   * @model name="boolType" literal="BOOLEAN"
   * @generated
   * @ordered
   */
  public static final int BOOL_TYPE_VALUE = 0;

  /**
   * The '<em><b>Int Type</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Int Type</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #INT_TYPE
   * @model name="intType" literal="NUMBER"
   * @generated
   * @ordered
   */
  public static final int INT_TYPE_VALUE = 1;

  /**
   * The '<em><b>Real Type</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Real Type</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #REAL_TYPE
   * @model name="realType" literal="REAL"
   * @generated
   * @ordered
   */
  public static final int REAL_TYPE_VALUE = 2;

  /**
   * The '<em><b>String Type</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>String Type</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #STRING_TYPE
   * @model name="stringType" literal="TEXT"
   * @generated
   * @ordered
   */
  public static final int STRING_TYPE_VALUE = 3;

  /**
   * An array of all the '<em><b>Type Primitif</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final TypePrimitif[] VALUES_ARRAY =
    new TypePrimitif[]
    {
      BOOL_TYPE,
      INT_TYPE,
      REAL_TYPE,
      STRING_TYPE,
    };

  /**
   * A public read-only list of all the '<em><b>Type Primitif</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<TypePrimitif> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>Type Primitif</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static TypePrimitif get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      TypePrimitif result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Type Primitif</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static TypePrimitif getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      TypePrimitif result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Type Primitif</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static TypePrimitif get(int value)
  {
    switch (value)
    {
      case BOOL_TYPE_VALUE: return BOOL_TYPE;
      case INT_TYPE_VALUE: return INT_TYPE;
      case REAL_TYPE_VALUE: return REAL_TYPE;
      case STRING_TYPE_VALUE: return STRING_TYPE;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private TypePrimitif(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //TypePrimitif
